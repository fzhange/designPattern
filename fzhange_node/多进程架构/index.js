/**
 * !服务器服务模型
 * ?多线程模式 (apache)
 * 一个线程服务一个请求。
 * 优势:线程之间可以共享数据；如果可以利用好线程池、就可以减少线程创建和销毁的资源开销。
 * 劣势:
 * 1.每个线程都有自己的堆栈，堆栈需要占用一定的内存空间。   当并发量过高的时候，就会引起内存问题。
 * 2.CPU在一个时间点只能做一件事情，针对多线程处理需要频繁的切换执行上下文。
 * ?事件驱动模式(nginx node)
 * 劣势:
 * 1.多核CPU利用率
 * 2.进程的健壮性
 */


 /**
  * !进程间通信原理 
  * 实现IPC(inter process communication)的方式有很多;如
  * 命名管道、匿名管道、socket、信号量、共享内存、消息队列、Domain socket等。
  * node中的IPC是实现是基于pipe(管道)技术。在node中管道只是一个抽象层面的称呼、具体实现由libuv实现。
  * libuv在window下通过 命名管道（named pipe）实现,*nix下通过uninx domain socket实现。    IPC与网络的socket行为比较类似，属于双向通信。
  */

  